/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.awt.Color;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import p5_negocio.entidades.Avaliacao;
import p5_negocio.entidades.Avaliador;
import p5_negocio.entidades.Processo;
import p6_excecoes.BancoDeDadosException;

/**
 *
 * @author o
 */
public class JPanelProcessoCadastrar extends javax.swing.JPanel {

    /**
     * Creates new form JPanelCliente
     */
    private TelasProjetoFinalPrincipal telaprincipal;
    private JPanelProcessoListar telaProcessoListar;
    private JPanelAvaliacaoListar telaAvaliacaoListar;
    private JOptionPaneGui exibe;
    private Processo processo;
    private Avaliador av1, av2, av3;

    public JPanelProcessoCadastrar(TelasProjetoFinalPrincipal telaprincipal) {
        initComponents();
        inicializarAvaliadores();
        this.telaprincipal = telaprincipal;
        exibe = new JOptionPaneGui();
        if (!jCheckBox2.isSelected()) {
            jCheckBox2.doClick();
        }
        
    }

    public JPanelProcessoCadastrar(JPanelProcessoListar telaProf) {
        initComponents();
        inicializarAvaliadores();
        this.telaProcessoListar = telaProf;
        this.telaprincipal = this.telaProcessoListar.telaprincipal;
        exibe = new JOptionPaneGui();
        if (!jCheckBox2.isSelected()) {
            jCheckBox2.doClick();
        }
        
    }

    public JPanelProcessoCadastrar(JPanelProcessoListar telaProf, Processo p) {
        initComponents();
        inicializarAvaliadores();
        this.telaProcessoListar = telaProf;
        this.telaprincipal = this.telaProcessoListar.telaprincipal;
        exibe = new JOptionPaneGui();
        this.setProcesso(p);
        CarregaDadosProcesso(this.getProcesso());
        if (!jCheckBox2.isSelected()) {
            jCheckBox2.doClick();
        }
        
    }

    public JPanelProcessoCadastrar(JPanelAvaliacaoListar telaAV) {
        initComponents();
        inicializarAvaliadores();
        this.telaAvaliacaoListar = telaAV;
        this.telaprincipal = this.telaAvaliacaoListar.telaprincipal;
        exibe = new JOptionPaneGui();
        CarregaDadosProcesso(this.getProcesso());
        if (!jCheckBox2.isSelected()) {
            jCheckBox2.doClick();
        }
        
    }

    public JPanelProcessoCadastrar(JPanelAvaliacaoListar telaAV, Processo p, int i) {
        initComponents();
        inicializarAvaliadores();
        this.telaAvaliacaoListar = telaAV;
        this.telaprincipal = this.telaAvaliacaoListar.telaprincipal;
        exibe = new JOptionPaneGui();
        this.setProcesso(p);
        CarregaDadosProcesso(this.getProcesso());
        if (!jCheckBox2.isSelected()) {
            jCheckBox2.doClick();
        }        
        jTabbedPane2.setSelectedIndex(1);
        jTabbedPane1.setSelectedIndex(i);
    }

    private void inicializarAvaliadores() {
        System.out.println("funcao inicializar avaliadores");
        this.setAv1(new Avaliador(1, "", "", "", "", ""));
        this.setAv2(getAv1());
        this.setAv3(getAv1());
    }

    ;

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel16 = new javax.swing.JLabel();
        btnSalvar = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jTabbedPane2 = new javax.swing.JTabbedPane();
        jPanelDadosCliente = new javax.swing.JPanel();
        lblNome1 = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        lblNome2 = new javax.swing.JLabel();
        lblNome3 = new javax.swing.JLabel();
        txtSituacao = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        textAreaComentarios = new javax.swing.JTextArea();
        jLabel7 = new javax.swing.JLabel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        ComboBoxNivel = new javax.swing.JComboBox<>();
        txtFormaterDataInicio = new javax.swing.JFormattedTextField();
        txtFormaterDataFim = new javax.swing.JFormattedTextField();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        txtNomeInterno = new javax.swing.JTextField();
        lblNomeAvaliadorInterno = new javax.swing.JLabel();
        lbl_instituicao_Interno = new javax.swing.JLabel();
        txtInstituicaoInterno = new javax.swing.JTextField();
        lbl_email_Interno = new javax.swing.JLabel();
        txtEmailInterno = new javax.swing.JTextField();
        lbl_Telefone_Interno = new javax.swing.JLabel();
        txtTelefoneInterno = new javax.swing.JTextField();
        lblParecerInterno = new javax.swing.JLabel();
        jPanel5 = new javax.swing.JPanel();
        chkAceiteEnviadoInterno = new javax.swing.JCheckBox();
        chkAceiteRecebidoInterno = new javax.swing.JCheckBox();
        txtFormaterAceiteEnviadoInterno = new javax.swing.JFormattedTextField();
        txtFormaterAceiteRecebidoInterno = new javax.swing.JFormattedTextField();
        jPanel6 = new javax.swing.JPanel();
        chkDocumentoEnviadoInterno = new javax.swing.JCheckBox();
        chkDocumentoRecebidoInterno = new javax.swing.JCheckBox();
        txtFormaterDocumentoEnviadoInterno = new javax.swing.JFormattedTextField();
        txtFormaterDocumentoRecebidoInterno = new javax.swing.JFormattedTextField();
        ComboBoxParecerInterno = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();
        btnAddAvaliador1 = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        lblNomeAvaliadorExterno1 = new javax.swing.JLabel();
        txtNomeExterno1 = new javax.swing.JTextField();
        lbl_instituicao_Externo1 = new javax.swing.JLabel();
        txtInstituicaoExterno1 = new javax.swing.JTextField();
        jPanel7 = new javax.swing.JPanel();
        chkAceiteEnviadoInterno1 = new javax.swing.JCheckBox();
        chkAceiteRecebidoInterno1 = new javax.swing.JCheckBox();
        txtFormaterAceiteEnviadoExterno1 = new javax.swing.JFormattedTextField();
        txtFormaterAceiteRecebidoExterno1 = new javax.swing.JFormattedTextField();
        lbl_email_Externo1 = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        chkDocumentoEnviadoInterno1 = new javax.swing.JCheckBox();
        chkDocumentoRecebidoInterno1 = new javax.swing.JCheckBox();
        txtFormaterDocumentoEnviadoExterno1 = new javax.swing.JFormattedTextField();
        txtFormaterDocumentoRecebidoExterno1 = new javax.swing.JFormattedTextField();
        txtEmailExterno1 = new javax.swing.JTextField();
        lbl_Telefone_Externo1 = new javax.swing.JLabel();
        lblParecerExterno1 = new javax.swing.JLabel();
        txtTelefoneExterno1 = new javax.swing.JTextField();
        ComboBoxParecerExterno1 = new javax.swing.JComboBox<>();
        jButton3 = new javax.swing.JButton();
        btnAddAvaliador2 = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        txtNomeExterno2 = new javax.swing.JTextField();
        lbl_instituicao_Externo2 = new javax.swing.JLabel();
        txtInstituicaoExterno2 = new javax.swing.JTextField();
        jPanel9 = new javax.swing.JPanel();
        chkAceiteEnviadoInterno2 = new javax.swing.JCheckBox();
        chkAceiteRecebidoInterno2 = new javax.swing.JCheckBox();
        txtFormaterAceiteEnviadoExterno2 = new javax.swing.JFormattedTextField();
        txtFormaterAceiteRecebidoExterno2 = new javax.swing.JFormattedTextField();
        txtEmailExterno2 = new javax.swing.JTextField();
        lbl_Telefone_Externo2 = new javax.swing.JLabel();
        lblParecerExterno2 = new javax.swing.JLabel();
        txtTelefoneExterno2 = new javax.swing.JTextField();
        lbl_email_Externo2 = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        chkDocumentoEnviadoInterno2 = new javax.swing.JCheckBox();
        chkDocumentoRecebidoInterno2 = new javax.swing.JCheckBox();
        txtFormaterDocumentoEnviadoExterno2 = new javax.swing.JFormattedTextField();
        txtFormaterDocumentoRecebidoExterno2 = new javax.swing.JFormattedTextField();
        lblNomeAvaliadorExterno2 = new javax.swing.JLabel();
        ComboBoxParecerExterno2 = new javax.swing.JComboBox<>();
        jButton4 = new javax.swing.JButton();
        btnAddAvaliador3 = new javax.swing.JButton();

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel16.setText("Cadastro Processo");

        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        jButton1.setText("voltar");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jTabbedPane2.setAutoscrolls(true);

        jPanelDadosCliente.setBorder(javax.swing.BorderFactory.createTitledBorder("Professor"));

        lblNome1.setText("Código");

        txtId.setEditable(false);
        txtId.setEnabled(false);

        jLabel2.setText("Nome");

        jLabel3.setText("Nivel Pretendido");

        jLabel4.setText("situacao");

        lblNome2.setText("inicio");

        lblNome3.setText("termino");

        textAreaComentarios.setColumns(20);
        textAreaComentarios.setRows(5);
        jScrollPane1.setViewportView(textAreaComentarios);

        jLabel7.setText("comentarios");

        jCheckBox1.setText("Marcar termino");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        jCheckBox2.setText("Marcar inicio");
        jCheckBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox2ActionPerformed(evt);
            }
        });

        ComboBoxNivel.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Escolha o nivel", "Nivel I", "Nivel II", "Nivel III" }));
        ComboBoxNivel.setSelectedIndex(1);

        txtFormaterDataInicio.setColumns(10);
        try {
            txtFormaterDataInicio.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##-##-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtFormaterDataInicio.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);

        txtFormaterDataFim.setColumns(10);
        try {
            txtFormaterDataFim.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##-##-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }

        javax.swing.GroupLayout jPanelDadosClienteLayout = new javax.swing.GroupLayout(jPanelDadosCliente);
        jPanelDadosCliente.setLayout(jPanelDadosClienteLayout);
        jPanelDadosClienteLayout.setHorizontalGroup(
            jPanelDadosClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDadosClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelDadosClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblNome1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(31, 31, 31)
                .addGroup(jPanelDadosClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtSituacao)
                    .addComponent(txtNome)
                    .addComponent(ComboBoxNivel, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(txtId)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanelDadosClienteLayout.createSequentialGroup()
                        .addGroup(jPanelDadosClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanelDadosClienteLayout.createSequentialGroup()
                                .addComponent(lblNome2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtFormaterDataInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jCheckBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelDadosClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanelDadosClienteLayout.createSequentialGroup()
                                .addComponent(lblNome3)
                                .addGap(18, 18, 18)
                                .addComponent(txtFormaterDataFim, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 14, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanelDadosClienteLayout.setVerticalGroup(
            jPanelDadosClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelDadosClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelDadosClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelDadosClienteLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(lblNome1))
                    .addComponent(txtId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelDadosClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(ComboBoxNivel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelDadosClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addGroup(jPanelDadosClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(txtSituacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelDadosClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 56, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanelDadosClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox2)
                    .addComponent(jCheckBox1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelDadosClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNome2)
                    .addComponent(lblNome3)
                    .addComponent(txtFormaterDataInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFormaterDataFim, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(62, 62, 62))
        );

        jTabbedPane2.addTab("Processo", jPanelDadosCliente);

        jTabbedPane1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jTabbedPane1.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        jTabbedPane1.setToolTipText("");

        txtNomeInterno.setEditable(false);

        lblNomeAvaliadorInterno.setText("Nome");

        lbl_instituicao_Interno.setText("instituicao");

        txtInstituicaoInterno.setEditable(false);

        lbl_email_Interno.setText("email");

        txtEmailInterno.setEditable(false);

        lbl_Telefone_Interno.setText("telefone");

        txtTelefoneInterno.setEditable(false);

        lblParecerInterno.setText("Estado");

        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder("Aceite"));

        chkAceiteEnviadoInterno.setText("enviado");
        chkAceiteEnviadoInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkAceiteEnviadoInternoActionPerformed(evt);
            }
        });

        chkAceiteRecebidoInterno.setText("recebido");
        chkAceiteRecebidoInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkAceiteRecebidoInternoActionPerformed(evt);
            }
        });

        txtFormaterAceiteEnviadoInterno.setColumns(10);
        try {
            txtFormaterAceiteEnviadoInterno.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##-##-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtFormaterAceiteEnviadoInterno.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);

        txtFormaterAceiteRecebidoInterno.setColumns(10);
        try {
            txtFormaterAceiteRecebidoInterno.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##-##-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtFormaterAceiteRecebidoInterno.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chkAceiteEnviadoInterno)
                    .addComponent(chkAceiteRecebidoInterno))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtFormaterAceiteEnviadoInterno)
                    .addComponent(txtFormaterAceiteRecebidoInterno))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkAceiteEnviadoInterno)
                    .addComponent(txtFormaterAceiteEnviadoInterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkAceiteRecebidoInterno)
                    .addComponent(txtFormaterAceiteRecebidoInterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6.setBorder(javax.swing.BorderFactory.createTitledBorder("Documentos"));

        chkDocumentoEnviadoInterno.setText("enviado");
        chkDocumentoEnviadoInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkDocumentoEnviadoInternoActionPerformed(evt);
            }
        });

        chkDocumentoRecebidoInterno.setText("recebido");
        chkDocumentoRecebidoInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkDocumentoRecebidoInternoActionPerformed(evt);
            }
        });

        txtFormaterDocumentoEnviadoInterno.setColumns(10);
        try {
            txtFormaterDocumentoEnviadoInterno.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##-##-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtFormaterDocumentoEnviadoInterno.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);

        txtFormaterDocumentoRecebidoInterno.setColumns(10);
        try {
            txtFormaterDocumentoRecebidoInterno.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##-##-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtFormaterDocumentoRecebidoInterno.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chkDocumentoEnviadoInterno)
                    .addComponent(chkDocumentoRecebidoInterno))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtFormaterDocumentoRecebidoInterno)
                    .addComponent(txtFormaterDocumentoEnviadoInterno))
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkDocumentoEnviadoInterno)
                    .addComponent(txtFormaterDocumentoEnviadoInterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkDocumentoRecebidoInterno)
                    .addComponent(txtFormaterDocumentoRecebidoInterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ComboBoxParecerInterno.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sem avaliador", "Aguardando aceite", "Aguardando documento", "Aprovado", "Reprovado" }));
        ComboBoxParecerInterno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBoxParecerInternoActionPerformed(evt);
            }
        });

        jButton2.setText("Limpar dados avaliador interno");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        btnAddAvaliador1.setText("Adicionar/substituir");
        btnAddAvaliador1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddAvaliador1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(lblParecerInterno)
                                .addGap(51, 51, 51)
                                .addComponent(ComboBoxParecerInterno, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButton2)))
                        .addGap(15, 15, 15))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnAddAvaliador1, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNomeAvaliadorInterno)
                            .addComponent(lbl_instituicao_Interno)
                            .addComponent(lbl_email_Interno)
                            .addComponent(lbl_Telefone_Interno))
                        .addGap(13, 13, 13)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTelefoneInterno)
                            .addComponent(txtEmailInterno)
                            .addComponent(txtInstituicaoInterno)
                            .addComponent(txtNomeInterno))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNomeInterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNomeAvaliadorInterno))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtInstituicaoInterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_instituicao_Interno))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEmailInterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_email_Interno))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTelefoneInterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_Telefone_Interno)))
                    .addComponent(btnAddAvaliador1, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ComboBoxParecerInterno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblParecerInterno))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Avaliador interno", jPanel1);

        lblNomeAvaliadorExterno1.setText("Nome");

        txtNomeExterno1.setEditable(false);

        lbl_instituicao_Externo1.setText("instituicao");

        txtInstituicaoExterno1.setEditable(false);

        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder("Aceite"));
        jPanel7.setPreferredSize(new java.awt.Dimension(187, 96));

        chkAceiteEnviadoInterno1.setText("enviado");
        chkAceiteEnviadoInterno1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkAceiteEnviadoInterno1ActionPerformed(evt);
            }
        });

        chkAceiteRecebidoInterno1.setText("recebido");
        chkAceiteRecebidoInterno1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkAceiteRecebidoInterno1ActionPerformed(evt);
            }
        });

        txtFormaterAceiteEnviadoExterno1.setColumns(10);
        try {
            txtFormaterAceiteEnviadoExterno1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##-##-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtFormaterAceiteEnviadoExterno1.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);

        txtFormaterAceiteRecebidoExterno1.setColumns(10);
        try {
            txtFormaterAceiteRecebidoExterno1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##-##-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtFormaterAceiteRecebidoExterno1.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chkAceiteRecebidoInterno1)
                    .addComponent(chkAceiteEnviadoInterno1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtFormaterAceiteEnviadoExterno1, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE)
                    .addComponent(txtFormaterAceiteRecebidoExterno1, javax.swing.GroupLayout.DEFAULT_SIZE, 110, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFormaterAceiteEnviadoExterno1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkAceiteEnviadoInterno1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFormaterAceiteRecebidoExterno1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(chkAceiteRecebidoInterno1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lbl_email_Externo1.setText("email");

        jPanel8.setBorder(javax.swing.BorderFactory.createTitledBorder("Documentos"));
        jPanel8.setPreferredSize(new java.awt.Dimension(187, 96));

        chkDocumentoEnviadoInterno1.setText("enviado");
        chkDocumentoEnviadoInterno1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkDocumentoEnviadoInterno1ActionPerformed(evt);
            }
        });

        chkDocumentoRecebidoInterno1.setText("recebido");
        chkDocumentoRecebidoInterno1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkDocumentoRecebidoInterno1ActionPerformed(evt);
            }
        });

        txtFormaterDocumentoEnviadoExterno1.setColumns(10);
        try {
            txtFormaterDocumentoEnviadoExterno1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##-##-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtFormaterDocumentoEnviadoExterno1.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);

        txtFormaterDocumentoRecebidoExterno1.setColumns(10);
        try {
            txtFormaterDocumentoRecebidoExterno1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##-##-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtFormaterDocumentoRecebidoExterno1.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chkDocumentoEnviadoInterno1)
                    .addComponent(chkDocumentoRecebidoInterno1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtFormaterDocumentoEnviadoExterno1)
                    .addComponent(txtFormaterDocumentoRecebidoExterno1))
                .addContainerGap())
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkDocumentoEnviadoInterno1)
                    .addComponent(txtFormaterDocumentoEnviadoExterno1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkDocumentoRecebidoInterno1)
                    .addComponent(txtFormaterDocumentoRecebidoExterno1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txtEmailExterno1.setEditable(false);

        lbl_Telefone_Externo1.setText("telefone");

        lblParecerExterno1.setText("Estado");

        txtTelefoneExterno1.setEditable(false);

        ComboBoxParecerExterno1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sem avaliador", "Aguardando aceite", "Aguardando documento", "Aprovado", "Reprovado" }));
        ComboBoxParecerExterno1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBoxParecerExterno1ActionPerformed(evt);
            }
        });

        jButton3.setText("Limpar dados avaliador externo 1");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        btnAddAvaliador2.setText("Adicionar/substituir");
        btnAddAvaliador2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddAvaliador2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel3Layout.createSequentialGroup()
                                .addComponent(lblParecerExterno1)
                                .addGap(51, 51, 51)
                                .addComponent(ComboBoxParecerExterno1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, 211, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButton3)))
                        .addGap(15, 15, 15))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(btnAddAvaliador2, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNomeAvaliadorExterno1)
                            .addComponent(lbl_instituicao_Externo1)
                            .addComponent(lbl_email_Externo1)
                            .addComponent(lbl_Telefone_Externo1))
                        .addGap(13, 13, 13)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTelefoneExterno1)
                            .addComponent(txtEmailExterno1)
                            .addComponent(txtInstituicaoExterno1)
                            .addComponent(txtNomeExterno1))
                        .addContainerGap())))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNomeExterno1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNomeAvaliadorExterno1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtInstituicaoExterno1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_instituicao_Externo1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEmailExterno1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_email_Externo1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTelefoneExterno1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_Telefone_Externo1)))
                    .addComponent(btnAddAvaliador2, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblParecerExterno1)
                    .addComponent(ComboBoxParecerExterno1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton3)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Avaliador externo 1", jPanel3);

        txtNomeExterno2.setEditable(false);

        lbl_instituicao_Externo2.setText("instituicao");

        txtInstituicaoExterno2.setEditable(false);

        jPanel9.setBorder(javax.swing.BorderFactory.createTitledBorder("Aceite"));

        chkAceiteEnviadoInterno2.setText("enviado");
        chkAceiteEnviadoInterno2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkAceiteEnviadoInterno2ActionPerformed(evt);
            }
        });

        chkAceiteRecebidoInterno2.setText("recebido");
        chkAceiteRecebidoInterno2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkAceiteRecebidoInterno2ActionPerformed(evt);
            }
        });

        txtFormaterAceiteEnviadoExterno2.setColumns(10);
        try {
            txtFormaterAceiteEnviadoExterno2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##-##-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtFormaterAceiteEnviadoExterno2.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);

        txtFormaterAceiteRecebidoExterno2.setColumns(10);
        try {
            txtFormaterAceiteRecebidoExterno2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##-##-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtFormaterAceiteRecebidoExterno2.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);

        javax.swing.GroupLayout jPanel9Layout = new javax.swing.GroupLayout(jPanel9);
        jPanel9.setLayout(jPanel9Layout);
        jPanel9Layout.setHorizontalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chkAceiteEnviadoInterno2)
                    .addComponent(chkAceiteRecebidoInterno2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtFormaterAceiteEnviadoExterno2)
                    .addComponent(txtFormaterAceiteRecebidoExterno2))
                .addContainerGap())
        );
        jPanel9Layout.setVerticalGroup(
            jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel9Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkAceiteEnviadoInterno2)
                    .addComponent(txtFormaterAceiteEnviadoExterno2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel9Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkAceiteRecebidoInterno2)
                    .addComponent(txtFormaterAceiteRecebidoExterno2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        txtEmailExterno2.setEditable(false);

        lbl_Telefone_Externo2.setText("telefone");

        lblParecerExterno2.setText("Estado");

        txtTelefoneExterno2.setEditable(false);

        lbl_email_Externo2.setText("email");

        jPanel10.setBorder(javax.swing.BorderFactory.createTitledBorder("Documentos"));

        chkDocumentoEnviadoInterno2.setText("enviado");
        chkDocumentoEnviadoInterno2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkDocumentoEnviadoInterno2ActionPerformed(evt);
            }
        });

        chkDocumentoRecebidoInterno2.setText("recebido");
        chkDocumentoRecebidoInterno2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chkDocumentoRecebidoInterno2ActionPerformed(evt);
            }
        });

        txtFormaterDocumentoEnviadoExterno2.setColumns(10);
        try {
            txtFormaterDocumentoEnviadoExterno2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##-##-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtFormaterDocumentoEnviadoExterno2.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);

        txtFormaterDocumentoRecebidoExterno2.setColumns(10);
        try {
            txtFormaterDocumentoRecebidoExterno2.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##-##-####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtFormaterDocumentoRecebidoExterno2.setFocusLostBehavior(javax.swing.JFormattedTextField.COMMIT);

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chkDocumentoEnviadoInterno2)
                    .addComponent(chkDocumentoRecebidoInterno2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtFormaterDocumentoRecebidoExterno2)
                    .addComponent(txtFormaterDocumentoEnviadoExterno2))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkDocumentoEnviadoInterno2)
                    .addComponent(txtFormaterDocumentoEnviadoExterno2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(chkDocumentoRecebidoInterno2)
                    .addComponent(txtFormaterDocumentoRecebidoExterno2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblNomeAvaliadorExterno2.setText("Nome");

        ComboBoxParecerExterno2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sem avaliador", "Aguardando aceite", "Aguardando documento", "Aprovado", "Reprovado" }));
        ComboBoxParecerExterno2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ComboBoxParecerExterno2ActionPerformed(evt);
            }
        });

        jButton4.setText("Limpar dados avaliador externo 2");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        btnAddAvaliador3.setText("Adicionar/substituir");
        btnAddAvaliador3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddAvaliador3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel4Layout.createSequentialGroup()
                                .addComponent(lblParecerExterno2)
                                .addGap(51, 51, 51)
                                .addComponent(ComboBoxParecerExterno2, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jButton4)))
                        .addGap(15, 15, 15))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(btnAddAvaliador3, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblNomeAvaliadorExterno2)
                            .addComponent(lbl_instituicao_Externo2)
                            .addComponent(lbl_email_Externo2)
                            .addComponent(lbl_Telefone_Externo2))
                        .addGap(13, 13, 13)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtTelefoneExterno2)
                            .addComponent(txtEmailExterno2)
                            .addComponent(txtInstituicaoExterno2)
                            .addComponent(txtNomeExterno2))
                        .addContainerGap())))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtNomeExterno2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lblNomeAvaliadorExterno2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtInstituicaoExterno2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_instituicao_Externo2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtEmailExterno2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_email_Externo2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtTelefoneExterno2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(lbl_Telefone_Externo2)))
                    .addComponent(btnAddAvaliador3, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblParecerExterno2)
                    .addComponent(ComboBoxParecerExterno2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Avaliador externo 2", jPanel4);

        jTabbedPane2.addTab("Avaliadores", jTabbedPane1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel16, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 467, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createSequentialGroup()
                .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addComponent(jTabbedPane2, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTabbedPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(11, 11, 11))
        );
    }// </editor-fold>//GEN-END:initComponents


    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed

        //criando datas
        java.util.Date aceiteEnvio, aceiteRecibo, docEnvio, docRecibo;

        //avaliador interno
        try {
            aceiteEnvio = verificaData(txtFormaterAceiteEnviadoInterno.getText());
        } catch (ParseException ex) {
            exibe.fazTelaErro("erro na data de aceite do avaliador interno", "erro no avaliador interno\nData de envio do aceite incorreta\nFormato de data invalido\nO programa somente trabalha no formato dd-mm-aaaa\nnecessariamente com o sinal de traço '-'");
            return;
        }
        try {
            aceiteRecibo = verificaData(txtFormaterAceiteRecebidoInterno.getText());
        } catch (ParseException ex) {
            exibe.fazTelaErro("erro na data de aceite do avaliador interno", "erro no avaliador interno\nData de recebimento do aceite incorreta\nFormato de data invalido\nO programa somente trabalha no formato dd-mm-aaaa\nnecessariamente com o sinal de traço '-'");
            return;
        }
        try {
            docEnvio = verificaData(txtFormaterDocumentoEnviadoInterno.getText());
        } catch (ParseException ex) {
            exibe.fazTelaErro("erro na data de documento do avaliador interno", "erro no avaliador interno\nData de envio do documento incorreta\nFormato de data invalido\nO programa somente trabalha no formato dd-mm-aaaa\nnecessariamente com o sinal de traço '-'");
            return;
        }
        try {
            docRecibo = verificaData(txtFormaterDocumentoRecebidoInterno.getText());
        } catch (ParseException ex) {
            exibe.fazTelaErro("erro na data de documento do avaliador internoo", "erro no avaliador interno\nData de recebimento do documento incorreta\nFormato de data invalido\nO programa somente trabalha no formato dd-mm-aaaa\nnecessariamente com o sinal de traço '-'");
            return;
        }

        Avaliacao a1 = new Avaliacao(
                0, getAv1(),
                aceiteEnvio,
                aceiteRecibo,
                docEnvio,
                docRecibo,
                ComboBoxParecerInterno.getSelectedItem() + "",
                1);

        //avaliador externo 1
        try {
            aceiteEnvio = verificaData(txtFormaterAceiteEnviadoExterno1.getText());
        } catch (ParseException ex) {
            exibe.fazTelaErro("erro na data de aceite do avaliador externo 1", "erro no avaliador externo 1\nData de envio do aceite incorreta\nFormato de data invalido\nO programa somente trabalha no formato dd-mm-aaaa\nnecessariamente com o sinal de traço '-'");
            return;
        }
        try {
            aceiteRecibo = verificaData(txtFormaterAceiteRecebidoExterno1.getText());
        } catch (ParseException ex) {
            exibe.fazTelaErro("erro na data de aceite do avaliador externo 1", "erro no avaliador externo 1\nData de recebimento do aceite incorreta\nFormato de data invalido\nO programa somente trabalha no formato dd-mm-aaaa\nnecessariamente com o sinal de traço '-'");
            return;
        }
        try {
            docEnvio = verificaData(txtFormaterDocumentoEnviadoExterno1.getText());
        } catch (ParseException ex) {
            exibe.fazTelaErro("erro na data de documento do avaliador externo 1", "erro no avaliador externo 1\nData de envio do documento incorreta\nFormato de data invalido\nO programa somente trabalha no formato dd-mm-aaaa\nnecessariamente com o sinal de traço '-'");
            return;
        }
        try {
            docRecibo = verificaData(txtFormaterDocumentoRecebidoExterno1.getText());
        } catch (ParseException ex) {
            exibe.fazTelaErro("erro na data de documento do avaliador externo 1", "erro no avaliador externo 1\nData de recebimento do documento incorreta\nFormato de data invalido\nO programa somente trabalha no formato dd-mm-aaaa\nnecessariamente com o sinal de traço '-'");
            return;
        }
        Avaliacao a2 = new Avaliacao(
                0, getAv2(),
                aceiteEnvio,
                aceiteRecibo,
                docEnvio,
                docRecibo,
                ComboBoxParecerExterno1.getSelectedItem() + "",
                2);
        //avaliador extermp 2

        try {
            aceiteEnvio = verificaData(txtFormaterAceiteEnviadoExterno2.getText());
        } catch (ParseException ex) {
            exibe.fazTelaErro("erro na data de aceite do avaliador externo 2", "erro no avaliador externo 2\nData de envio do aceite incorreta\nFormato de data invalido\nO programa somente trabalha no formato dd-mm-aaaa\nnecessariamente com o sinal de traço '-'");
            return;
        }
        try {
            aceiteRecibo = verificaData(txtFormaterAceiteRecebidoExterno2.getText());
        } catch (ParseException ex) {
            exibe.fazTelaErro("erro na data de aceite do avaliador externo 2", "erro no avaliador externo 2\nData de recebimento do aceite incorreta\nFormato de data invalido\nO programa somente trabalha no formato dd-mm-aaaa\nnecessariamente com o sinal de traço '-'");
            return;
        }
        try {
            docEnvio = verificaData(txtFormaterDocumentoEnviadoExterno2.getText());
        } catch (ParseException ex) {
            exibe.fazTelaErro("erro na data de documento do avaliador externo 2", "erro no avaliador externo 2\nData de envio do documento incorreta\nFormato de data invalido\nO programa somente trabalha no formato dd-mm-aaaa\nnecessariamente com o sinal de traço '-'");
            return;
        }
        try {
            docRecibo = verificaData(txtFormaterDocumentoRecebidoExterno2.getText());
        } catch (ParseException ex) {
            exibe.fazTelaErro("erro na data de documento do avaliador externo 2", "erro no avaliador externo 2\nData de recebimento do documento incorreta\nFormato de data invalido\nO programa somente trabalha no formato dd-mm-aaaa\nnecessariamente com o sinal de traço '-'");
            return;
        }

        Avaliacao a3 = new Avaliacao(
                0, getAv3(),
                aceiteEnvio,
                aceiteRecibo,
                docEnvio,
                docRecibo,
                ComboBoxParecerExterno2.getSelectedItem() + "",
                3);

        java.util.Date dataInicio, datafim;
        // verifica se nao vai dar erro de formato invalido para data
        if (txtFormaterDataInicio.getText().equals("")) {
            exibe.fazTelaErro("erro na data", "É necessario preencher a data do inicio do processo");
            return;
        }
        try {
            dataInicio = verificaData(txtFormaterDataInicio.getText());
        } catch (ParseException ex) {
            exibe.fazTelaErro("erro na data de inicio", "Formato de data invalido\nO programa somente trabalha no formato dd-mm-aaaa\nnecessariamente com o sinal de traço '-'");
            return;
        }
        try {
            datafim = verificaData(txtFormaterDataFim.getText());
        } catch (ParseException ex) {
            exibe.fazTelaErro("erro na data de conclusao", "Formato de data invalido\nO programa somente trabalha no formato dd-mm-aaaa\nnecessariamente com o sinal de traço '-'");
            return;
        }

        Processo proc;
        // se nao tem id entao é cadastro
        if (txtId.getText().equals("")) {
            proc = new Processo(
                    txtNome.getText(),
                    ComboBoxNivel.getSelectedIndex(),
                    txtSituacao.getText(),
                    dataInicio,
                    datafim,
                    a1, a2, a3,
                    textAreaComentarios.getText());
            System.out.println("cadastro");
            try {

                int idprocesso = this.telaprincipal.getFachada().adicionarProcesso(proc);
                // verifica se nao deu erro de insercao
                if (idprocesso == -1) {
                    exibe.fazTelaErro("erro ao cadastrar", "O sistema retornou um id de inserçao de processo invalido");
                }
                //System.out.println(idprocesso);
                proc.getAvaliacao1().setIdProcesso(idprocesso);
                proc.getAvaliacao2().setIdProcesso(idprocesso);
                proc.getAvaliacao3().setIdProcesso(idprocesso);
                this.telaprincipal.getFachada().adicionarAvaliacao(proc.getAvaliacao1());
                this.telaprincipal.getFachada().adicionarAvaliacao(proc.getAvaliacao2());
                this.telaprincipal.getFachada().adicionarAvaliacao(proc.getAvaliacao3());

                exibe.fazTelaInformacao("Cadastro realizado", "Cadastro realizado com sucesso!");
                jButton1.doClick();
            } catch (BancoDeDadosException | SQLException ex) {
                exibe.fazTelaErro("erro no Cadastro", "erro ao acessar banco de dados!");
                System.out.println(ex);
            }
        } else {
            // se ja tem o ID é atualizaçao, nesse caso vou usar o processo que ja esta carregado
            processo.setNome(txtNome.getText());
            processo.setNivelSrc(ComboBoxNivel.getSelectedIndex());
            processo.setSituacao(txtSituacao.getText());
            processo.setInicioProcesso(dataInicio);
            processo.setConclusaoProcesso(datafim);
            processo.setComentarios(textAreaComentarios.getText());

            //atribuindo idProcesso a avaliacao, que foi criada sem
            a1.setIdProcesso(processo.getId());
            a2.setIdProcesso(processo.getId());
            a3.setIdProcesso(processo.getId());
            //atribuindo id da avaliaçao a nova avaliacao
            a1.setId(processo.getAvaliacao1().getId());
            a2.setId(processo.getAvaliacao2().getId());
            a3.setId(processo.getAvaliacao3().getId());
            
            

            processo.setAvaliacao1(a1);
            processo.setAvaliacao2(a2);
            processo.setAvaliacao3(a3);

            System.out.println("atualizacao");

            try {
                this.telaprincipal.getFachada().editarProcesso(processo);
                this.telaprincipal.getFachada().editarAvaliacao(processo.getAvaliacao1());
                this.telaprincipal.getFachada().editarAvaliacao(processo.getAvaliacao2());
                this.telaprincipal.getFachada().editarAvaliacao(processo.getAvaliacao3());
                exibe.fazTelaInformacao("Cadastro realizado", "Cadastro realizado com sucesso!");
                jButton1.doClick();
            } catch (BancoDeDadosException | SQLException ex) {
                exibe.fazTelaErro("erro de Banco de dados", "erro ao acessar banco de dados!");
                System.out.println(ex);
            }
        }


    }//GEN-LAST:event_btnSalvarActionPerformed

    private void jCheckBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox2ActionPerformed
        String texto = carregaDataCheckbox(jCheckBox2.isSelected());
        if ("".equals(texto)) {
            txtFormaterDataInicio.setText(null);
        } else {
            txtFormaterDataInicio.setText(texto);
        }
    }//GEN-LAST:event_jCheckBox2ActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed
        String texto = carregaDataCheckbox(jCheckBox1.isSelected());
        if ("".equals(texto)) {
            txtFormaterDataFim.setText(null);
        } else {
            txtFormaterDataFim.setText(texto);
        }

    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void chkAceiteEnviadoInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkAceiteEnviadoInternoActionPerformed
        txtFormaterAceiteEnviadoInterno.setText(carregaDataCheckbox(chkAceiteEnviadoInterno.isSelected()));
    }//GEN-LAST:event_chkAceiteEnviadoInternoActionPerformed

    private void chkAceiteRecebidoInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkAceiteRecebidoInternoActionPerformed
        txtFormaterAceiteRecebidoInterno.setText(carregaDataCheckbox(chkAceiteRecebidoInterno.isSelected()));
    }//GEN-LAST:event_chkAceiteRecebidoInternoActionPerformed

    private void chkDocumentoEnviadoInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkDocumentoEnviadoInternoActionPerformed
        txtFormaterDocumentoEnviadoInterno.setText(carregaDataCheckbox(chkDocumentoEnviadoInterno.isSelected()));
    }//GEN-LAST:event_chkDocumentoEnviadoInternoActionPerformed

    private void chkDocumentoRecebidoInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkDocumentoRecebidoInternoActionPerformed
        txtFormaterDocumentoRecebidoInterno.setText(carregaDataCheckbox(chkDocumentoRecebidoInterno.isSelected()));
    }//GEN-LAST:event_chkDocumentoRecebidoInternoActionPerformed

    private void chkAceiteEnviadoInterno1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkAceiteEnviadoInterno1ActionPerformed
        txtFormaterAceiteEnviadoExterno1.setText(carregaDataCheckbox(chkAceiteEnviadoInterno1.isSelected()));
    }//GEN-LAST:event_chkAceiteEnviadoInterno1ActionPerformed

    private void chkAceiteRecebidoInterno1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkAceiteRecebidoInterno1ActionPerformed
        txtFormaterAceiteRecebidoExterno1.setText(carregaDataCheckbox(chkAceiteRecebidoInterno1.isSelected()));
    }//GEN-LAST:event_chkAceiteRecebidoInterno1ActionPerformed

    private void chkDocumentoEnviadoInterno1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkDocumentoEnviadoInterno1ActionPerformed
        txtFormaterDocumentoEnviadoExterno1.setText(carregaDataCheckbox(chkDocumentoEnviadoInterno1.isSelected()));
    }//GEN-LAST:event_chkDocumentoEnviadoInterno1ActionPerformed

    private void chkDocumentoRecebidoInterno1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkDocumentoRecebidoInterno1ActionPerformed
        txtFormaterDocumentoRecebidoExterno1.setText(carregaDataCheckbox(chkDocumentoRecebidoInterno1.isSelected()));
    }//GEN-LAST:event_chkDocumentoRecebidoInterno1ActionPerformed

    private void chkAceiteEnviadoInterno2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkAceiteEnviadoInterno2ActionPerformed
        txtFormaterAceiteEnviadoExterno2.setText(carregaDataCheckbox(chkAceiteEnviadoInterno2.isSelected()));
    }//GEN-LAST:event_chkAceiteEnviadoInterno2ActionPerformed

    private void chkAceiteRecebidoInterno2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkAceiteRecebidoInterno2ActionPerformed
        txtFormaterAceiteRecebidoExterno2.setText(carregaDataCheckbox(chkAceiteRecebidoInterno2.isSelected()));
    }//GEN-LAST:event_chkAceiteRecebidoInterno2ActionPerformed

    private void chkDocumentoEnviadoInterno2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkDocumentoEnviadoInterno2ActionPerformed
        txtFormaterDocumentoEnviadoExterno2.setText(carregaDataCheckbox(chkDocumentoEnviadoInterno2.isSelected()));
    }//GEN-LAST:event_chkDocumentoEnviadoInterno2ActionPerformed

    private void chkDocumentoRecebidoInterno2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chkDocumentoRecebidoInterno2ActionPerformed
        txtFormaterDocumentoRecebidoExterno2.setText(carregaDataCheckbox(chkDocumentoRecebidoInterno2.isSelected()));
    }//GEN-LAST:event_chkDocumentoRecebidoInterno2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        if (telaProcessoListar != null) {
            telaprincipal.setJpanelTelaPrincipal(telaProcessoListar);
            telaprincipal.mudarTela();
        } else if (telaAvaliacaoListar != null) {
            telaprincipal.setJpanelTelaPrincipal(telaAvaliacaoListar);
            telaprincipal.mudarTela();
        } else {
            telaprincipal.RetornarTelaPrincipal();
            telaprincipal.mudarTela();
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void ComboBoxParecerInternoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBoxParecerInternoActionPerformed
        coloreTabs(ComboBoxParecerInterno.getSelectedItem().toString(), 0);
    }//GEN-LAST:event_ComboBoxParecerInternoActionPerformed

    private void ComboBoxParecerExterno1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBoxParecerExterno1ActionPerformed
        coloreTabs(ComboBoxParecerExterno1.getSelectedItem().toString(), 1);        // TODO add your handling code here:
    }//GEN-LAST:event_ComboBoxParecerExterno1ActionPerformed

    private void ComboBoxParecerExterno2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ComboBoxParecerExterno2ActionPerformed
        coloreTabs(ComboBoxParecerExterno2.getSelectedItem().toString(), 2);        // TODO add your handling code here:
    }//GEN-LAST:event_ComboBoxParecerExterno2ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        txtFormaterAceiteEnviadoInterno.setText(null);
        txtFormaterAceiteRecebidoInterno.setText("");
        txtFormaterDocumentoEnviadoInterno.setText("");
        txtFormaterDocumentoRecebidoInterno.setText("");
        ComboBoxParecerInterno.setSelectedIndex(0);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        txtFormaterAceiteEnviadoExterno1.setText("");
        txtFormaterAceiteRecebidoExterno1.setText("");
        txtFormaterDocumentoEnviadoExterno1.setText("");
        txtFormaterDocumentoRecebidoExterno1.setText("");
        ComboBoxParecerExterno1.setSelectedIndex(0);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        txtFormaterAceiteEnviadoExterno2.setText("");
        txtFormaterAceiteRecebidoExterno2.setText("");
        txtFormaterDocumentoEnviadoExterno2.setText("");
        txtFormaterDocumentoRecebidoExterno2.setText("");
        ComboBoxParecerExterno2.setSelectedIndex(0);           // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void btnAddAvaliador1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddAvaliador1ActionPerformed
        System.out.println(av1.getNome());
        telaprincipal.setJpanelTelaPrincipal(new JPanelAvaliadorListar(this, 1));
        telaprincipal.mudarTela();
        // TODO add your handling code here:
    }//GEN-LAST:event_btnAddAvaliador1ActionPerformed

    private void btnAddAvaliador2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddAvaliador2ActionPerformed
        telaprincipal.setJpanelTelaPrincipal(new JPanelAvaliadorListar(this, 2));
        telaprincipal.mudarTela();
    }//GEN-LAST:event_btnAddAvaliador2ActionPerformed

    private void btnAddAvaliador3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddAvaliador3ActionPerformed
        telaprincipal.setJpanelTelaPrincipal(new JPanelAvaliadorListar(this, 3));
        telaprincipal.mudarTela();        // TODO add your handling code here:
    }//GEN-LAST:event_btnAddAvaliador3ActionPerformed

    private void CarregaDadosProcesso(Processo p) {

        try {
            ArrayList<Avaliacao> avaliadores = this.telaprincipal.getFachada().AvaliacaoListarPorIdProcesso(p.getId());

            p.setAvaliacao1(avaliadores.get(0));
            av1 = p.getAvaliacao1().getAvaliador();
            p.setAvaliacao2(avaliadores.get(1));
            av2 = p.getAvaliacao2().getAvaliador();
            p.setAvaliacao3(avaliadores.get(2));
            av3 = p.getAvaliacao3().getAvaliador();
            if (p.getAvaliacao1().getTipo() != 1) {
                exibe.fazTelaErro("erro na ordem de salvamento", "erro na ordem de salvamento, avaliador recuperado na posicao de interno nao é o interno");
            }
            if (p.getAvaliacao2().getTipo() != 2) {
                exibe.fazTelaErro("erro na ordem de salvamento", "erro na ordem de salvamento, avaliador recuperado na posicao de externo 1 foi: externo " + p.getAvaliacao2().getTipo());
            }
            if (p.getAvaliacao3().getTipo() != 3) {
                exibe.fazTelaErro("erro na ordem de salvamento", "erro na ordem de salvamento, avaliador recuperado na posicao de externo 2 foi: externo " + p.getAvaliacao3().getTipo());
            }

            avaliadores.removeAll(avaliadores);
        } catch (BancoDeDadosException ex) {
            exibe.fazTelaErro("erro ao carregar avaliadores", "Numero de avaliadores encontrado insuficiente ou lista vazia");
        } catch (SQLException ex) {
            Logger.getLogger(JPanelProcessoCadastrar.class.getName()).log(Level.SEVERE, null, ex);
        }

        txtId.setText(p.getId() + "");
        txtNome.setText(p.getNome());
        ComboBoxNivel.setSelectedIndex(p.getNivelSrc());
        txtSituacao.setText(p.getSituacao());

        //dataParaString é a funçao que verific se há data cadastrada, para evitar erro de format parser  
        txtFormaterDataInicio.setText(dataParaString(p.getInicioProcesso()));
        txtFormaterDataFim.setText(dataParaString(p.getConclusaoProcesso()));
        // essa parte serve para o checbox marcar se tiver data cadastrada
        if (!"  -  -    ".equals(txtFormaterDataInicio.getText())) {
            jCheckBox2.setSelected(true);
        }
        if (!"  -  -    ".equals(txtFormaterDataFim.getText())) {
            jCheckBox1.setSelected(true);
        }

        textAreaComentarios.setText(p.getComentarios());

        if (p.getAvaliacao1() != null) {
            //avaliador interno
            txtNomeInterno.setText(av1.getNome());
            txtInstituicaoInterno.setText(av1.getInstituicao());
            txtEmailInterno.setText(av1.getEmail());
            txtTelefoneInterno.setText(av1.getTelefone());
            //dataParaString é a funçao que verific se há data cadastrada, para evitar erro de format parser  
            txtFormaterAceiteEnviadoInterno.setText(dataParaString(p.getAvaliacao1().getEnvioAceite()));
            if (!"  -  -    ".equals(txtFormaterAceiteEnviadoInterno.getText())) {
                chkAceiteEnviadoInterno.setSelected(true);
            }
            txtFormaterAceiteRecebidoInterno.setText(dataParaString(p.getAvaliacao1().getRespostaAceite()));
            if (!"  -  -    ".equals(txtFormaterAceiteRecebidoInterno.getText())) {
                chkAceiteRecebidoInterno.setSelected(true);
            }
            txtFormaterDocumentoEnviadoInterno.setText(dataParaString(p.getAvaliacao1().getEnvioDocumentos()));
            if (!"  -  -    ".equals(txtFormaterDocumentoEnviadoInterno.getText())) {
                chkDocumentoEnviadoInterno.setSelected(true);
            }
            txtFormaterDocumentoRecebidoInterno.setText(dataParaString(p.getAvaliacao1().getRespostaDocumentos()));
            if (!"  -  -    ".equals(txtFormaterDocumentoRecebidoInterno.getText())) {
                chkDocumentoRecebidoInterno.setSelected(true);
            }
            ComboBoxParecerInterno.setSelectedItem(p.getAvaliacao1().getParecer());
        }
        if (p.getAvaliacao2() != null) {
            //avaliador externo 1
            txtNomeExterno1.setText(av2.getNome());
            txtInstituicaoExterno1.setText(av2.getInstituicao());
            txtEmailExterno1.setText(av2.getEmail());
            txtTelefoneExterno1.setText(av2.getTelefone());
            //dataParaString é a funçao que verific se há data cadastrada, para evitar erro de format parser  
            txtFormaterAceiteEnviadoExterno1.setText(dataParaString(p.getAvaliacao2().getEnvioAceite()));
            if (!"  -  -    ".equals(txtFormaterAceiteEnviadoExterno1.getText())) {
                chkAceiteEnviadoInterno1.setSelected(true);
            }
            txtFormaterAceiteRecebidoExterno1.setText(dataParaString(p.getAvaliacao2().getRespostaAceite()));
            if (!"  -  -    ".equals(txtFormaterAceiteRecebidoExterno1.getText())) {
                chkAceiteRecebidoInterno1.setSelected(true);
            }
            txtFormaterDocumentoEnviadoExterno1.setText(dataParaString(p.getAvaliacao2().getEnvioDocumentos()));
            if (!"  -  -    ".equals(txtFormaterDocumentoEnviadoExterno1.getText())) {
                chkDocumentoEnviadoInterno1.setSelected(true);
            }
            txtFormaterDocumentoRecebidoExterno1.setText(dataParaString(p.getAvaliacao2().getRespostaDocumentos()));
            if (!"  -  -    ".equals(txtFormaterDocumentoRecebidoExterno1.getText())) {
                chkDocumentoRecebidoInterno1.setSelected(true);
            }
            ComboBoxParecerExterno1.setSelectedItem(p.getAvaliacao2().getParecer());
        }
        if (p.getAvaliacao3() != null) {
            //avaliador extermp 2
            txtNomeExterno2.setText(av3.getNome());
            txtInstituicaoExterno2.setText(av3.getInstituicao());
            txtEmailExterno2.setText(av3.getEmail());
            txtTelefoneExterno2.setText(av3.getTelefone());
            //dataParaString é a funçao que verific se há data cadastrada, para evitar erro de format parser 
            txtFormaterAceiteEnviadoExterno2.setText(dataParaString(p.getAvaliacao3().getEnvioAceite()));
            if (!"  -  -    ".equals(txtFormaterAceiteEnviadoExterno2.getText())) {
                chkAceiteEnviadoInterno2.setSelected(true);
            }
            txtFormaterAceiteRecebidoExterno2.setText(dataParaString(p.getAvaliacao3().getRespostaAceite()));
            if (!"  -  -    ".equals(txtFormaterAceiteRecebidoExterno2.getText())) {
                chkAceiteRecebidoInterno2.setSelected(true);
            }
            txtFormaterDocumentoEnviadoExterno2.setText(dataParaString(p.getAvaliacao3().getEnvioDocumentos()));
            if (!"  -  -    ".equals(txtFormaterDocumentoEnviadoExterno2.getText())) {
                chkDocumentoEnviadoInterno2.setSelected(true);
            }
            txtFormaterDocumentoRecebidoExterno2.setText(dataParaString(p.getAvaliacao3().getRespostaDocumentos()));
            if (!"  -  -    ".equals(txtFormaterDocumentoRecebidoExterno2.getText())) {
                chkDocumentoRecebidoInterno2.setSelected(true);
            }
            ComboBoxParecerExterno2.setSelectedItem(p.getAvaliacao3().getParecer());
        }

        if ((p.getAvaliacao1() != null) && (p.getAvaliacao2() != null) && (p.getAvaliacao3() != null)) {
            // colore de verde quem ja aprovou
            coloreTabs(p.getAvaliacao1().getParecer(), 0);
            coloreTabs(p.getAvaliacao2().getParecer(), 1);
            coloreTabs(p.getAvaliacao3().getParecer(), 2);
        }

    }

    private void coloreTabs(String s, int posicao) {
        JLabel title = new JLabel(jTabbedPane1.getTitleAt(posicao));
        if (s.equals("Aprovado")) {
            title.setForeground(new Color(0, 128, 0)); // precisa do new
        } else if (s.equals("Reprovado")) {
            title.setForeground(Color.red);
        }
        jTabbedPane1.setTabComponentAt(posicao, title);
    }

    public void carregaDadosAvaliadorSelecioando(int i) {
        switch (i) {
            case 1:
                txtNomeInterno.setText(av1.getNome());
                txtInstituicaoInterno.setText(av1.getInstituicao());
                txtEmailInterno.setText(av1.getEmail());
                txtTelefoneInterno.setText(av1.getTelefone());
                break;
            case 2:
                txtNomeExterno1.setText(av2.getNome());
                txtInstituicaoExterno1.setText(av2.getInstituicao());
                txtEmailExterno1.setText(av2.getEmail());
                txtTelefoneExterno1.setText(av2.getTelefone());
                break;
            case 3:
                txtNomeExterno2.setText(av3.getNome());
                txtInstituicaoExterno2.setText(av3.getInstituicao());
                txtEmailExterno2.setText(av3.getEmail());
                txtTelefoneExterno2.setText(av3.getTelefone());
                break;
            default:
                break;
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> ComboBoxNivel;
    private javax.swing.JComboBox<String> ComboBoxParecerExterno1;
    private javax.swing.JComboBox<String> ComboBoxParecerExterno2;
    private javax.swing.JComboBox<String> ComboBoxParecerInterno;
    private javax.swing.JButton btnAddAvaliador1;
    private javax.swing.JButton btnAddAvaliador2;
    private javax.swing.JButton btnAddAvaliador3;
    private javax.swing.JButton btnSalvar;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox chkAceiteEnviadoInterno;
    private javax.swing.JCheckBox chkAceiteEnviadoInterno1;
    private javax.swing.JCheckBox chkAceiteEnviadoInterno2;
    private javax.swing.JCheckBox chkAceiteRecebidoInterno;
    private javax.swing.JCheckBox chkAceiteRecebidoInterno1;
    private javax.swing.JCheckBox chkAceiteRecebidoInterno2;
    private javax.swing.JCheckBox chkDocumentoEnviadoInterno;
    private javax.swing.JCheckBox chkDocumentoEnviadoInterno1;
    private javax.swing.JCheckBox chkDocumentoEnviadoInterno2;
    private javax.swing.JCheckBox chkDocumentoRecebidoInterno;
    private javax.swing.JCheckBox chkDocumentoRecebidoInterno1;
    private javax.swing.JCheckBox chkDocumentoRecebidoInterno2;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JPanel jPanel9;
    private javax.swing.JPanel jPanelDadosCliente;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTabbedPane jTabbedPane2;
    private javax.swing.JLabel lblNome1;
    private javax.swing.JLabel lblNome2;
    private javax.swing.JLabel lblNome3;
    private javax.swing.JLabel lblNomeAvaliadorExterno1;
    private javax.swing.JLabel lblNomeAvaliadorExterno2;
    private javax.swing.JLabel lblNomeAvaliadorInterno;
    private javax.swing.JLabel lblParecerExterno1;
    private javax.swing.JLabel lblParecerExterno2;
    private javax.swing.JLabel lblParecerInterno;
    private javax.swing.JLabel lbl_Telefone_Externo1;
    private javax.swing.JLabel lbl_Telefone_Externo2;
    private javax.swing.JLabel lbl_Telefone_Interno;
    private javax.swing.JLabel lbl_email_Externo1;
    private javax.swing.JLabel lbl_email_Externo2;
    private javax.swing.JLabel lbl_email_Interno;
    private javax.swing.JLabel lbl_instituicao_Externo1;
    private javax.swing.JLabel lbl_instituicao_Externo2;
    private javax.swing.JLabel lbl_instituicao_Interno;
    private javax.swing.JTextArea textAreaComentarios;
    private javax.swing.JTextField txtEmailExterno1;
    private javax.swing.JTextField txtEmailExterno2;
    private javax.swing.JTextField txtEmailInterno;
    private javax.swing.JFormattedTextField txtFormaterAceiteEnviadoExterno1;
    private javax.swing.JFormattedTextField txtFormaterAceiteEnviadoExterno2;
    private javax.swing.JFormattedTextField txtFormaterAceiteEnviadoInterno;
    private javax.swing.JFormattedTextField txtFormaterAceiteRecebidoExterno1;
    private javax.swing.JFormattedTextField txtFormaterAceiteRecebidoExterno2;
    private javax.swing.JFormattedTextField txtFormaterAceiteRecebidoInterno;
    private javax.swing.JFormattedTextField txtFormaterDataFim;
    private javax.swing.JFormattedTextField txtFormaterDataInicio;
    private javax.swing.JFormattedTextField txtFormaterDocumentoEnviadoExterno1;
    private javax.swing.JFormattedTextField txtFormaterDocumentoEnviadoExterno2;
    private javax.swing.JFormattedTextField txtFormaterDocumentoEnviadoInterno;
    private javax.swing.JFormattedTextField txtFormaterDocumentoRecebidoExterno1;
    private javax.swing.JFormattedTextField txtFormaterDocumentoRecebidoExterno2;
    private javax.swing.JFormattedTextField txtFormaterDocumentoRecebidoInterno;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtInstituicaoExterno1;
    private javax.swing.JTextField txtInstituicaoExterno2;
    private javax.swing.JTextField txtInstituicaoInterno;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtNomeExterno1;
    private javax.swing.JTextField txtNomeExterno2;
    private javax.swing.JTextField txtNomeInterno;
    private javax.swing.JTextField txtSituacao;
    private javax.swing.JTextField txtTelefoneExterno1;
    private javax.swing.JTextField txtTelefoneExterno2;
    private javax.swing.JTextField txtTelefoneInterno;
    // End of variables declaration//GEN-END:variables

    /**
     * @return the clienteSelecionado
     */
    /**
     * @return the telaprincipal
     */
    public TelasProjetoFinalPrincipal getTelaprincipal() {
        return telaprincipal;
    }

    /**
     * @param telaprincipal the telaprincipal to set
     */
    public void setTelaprincipal(TelasProjetoFinalPrincipal telaprincipal) {
        this.telaprincipal = telaprincipal;
    }

    /**
     * @return the processo
     */
    public Processo getProcesso() {
        return processo;
    }

    /**
     * @param processo the processo to set
     */
    public void setProcesso(Processo processo) {
        this.processo = processo;
    }

    private java.util.Date verificaData(String s) throws ParseException {
        java.text.SimpleDateFormat sdfForParsing = new java.text.SimpleDateFormat("dd-MM-yyyy");
        // verifica se nao vai dar erro de formato invalido para data no parse

        if (("  -  -    ".equals(s))) {
            return null;
        } else {
            s.replaceAll(" ", "0");
            return sdfForParsing.parse(s);
        }

    }

    private String dataParaString(java.util.Date dat) {
        java.text.SimpleDateFormat sdfForParsing = new java.text.SimpleDateFormat("dd-MM-yyyy");
        String texto;
        if (null == dat) {
            texto = "";
        } else {
            texto = sdfForParsing.format(dat);
        }
        return texto;
    }

    private String carregaDataCheckbox(Boolean b) {
        if (b) {
            Date now = new Date();
            SimpleDateFormat formatter = new SimpleDateFormat("dd-MM-yyyy");
            return formatter.format(now);
        } else {
            return "";
        }
    }

    /**
     * @return the av1
     */
    public Avaliador getAv1() {
        return av1;
    }

    /**
     * @param av1 the av1 to set
     */
    public void setAv1(Avaliador av1) {
        this.av1 = av1;
        System.out.println("av1" + av1.getNome());
    }

    /**
     * @return the av2
     */
    public Avaliador getAv2() {
        return av2;
    }

    /**
     * @param av2 the av2 to set
     */
    public void setAv2(Avaliador av2) {
        this.av2 = av2;
        System.out.println("av2" + av2.getNome());
    }

    /**
     * @return the av3
     */
    public Avaliador getAv3() {
        return av3;
    }

    /**
     * @param av3 the av3 to set
     */
    public void setAv3(Avaliador av3) {
        this.av3 = av3;
        System.out.println("av3" + av3.getNome());
    }

}// fim classe
